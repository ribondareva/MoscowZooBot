# –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å (–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω—É)
from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from bot.models.feedback import Feedback
from bot.utils.config import config
from bot.utils.db import async_session_maker
from bot.handlers.states import FeedbackState

router = Router()


# –ö–æ–º–∞–Ω–¥–∞ /feedback ‚Äî –∑–∞–ø—Ä–æ—Å –æ—Ç–∑—ã–≤–∞
@router.message(F.text.lower() == "/feedback")
async def ask_feedback(message: Message, state: FSMContext):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="–û—Ç–º–µ–Ω–∞")]], resize_keyboard=True
    )
    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤:", reply_markup=keyboard)
    await state.set_state(FeedbackState.waiting_for_feedback)


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π –æ—Ç–∑—ã–≤
@router.message(FeedbackState.waiting_for_feedback, F.text)
async def process_feedback(message: Message, state: FSMContext):
    feedback_text = message.text

    if feedback_text.lower() == "–æ—Ç–º–µ–Ω–∞":
        await message.answer("–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∑—ã–≤–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=None)
        await state.clear()
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–∑—ã–≤ –≤ –±–∞–∑—É
    async with async_session_maker() as session:
        new_feedback = Feedback(
            user_id=message.from_user.id,
            username=message.from_user.username,
            text=feedback_text,
        )
        session.add(new_feedback)
        await session.commit()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–∑—ã–≤ –∞–¥–º–∏–Ω–∞–º
    await message.bot.send_message(
        config.support_chat_id,
        f"üì¢ –û—Ç–∑—ã–≤ –æ—Ç @{message.from_user.username}:\n\n{feedback_text}",
    )

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! üòä", reply_markup=None)
    await state.clear()
